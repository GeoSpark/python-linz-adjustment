# ========================================================
# Standard adjustment parameters
#
# Option to ignore unrecognized commands in configuration
# ignore_unknown_config_command
#
# Input/output files

listing_file WARK2015LT.lst

# Coordinate input file (not required if can calculate all stations)

coordinate_file network.csv

# Data files.  Can be SNX, msr (dynanet format), csv. By default CSV. 
# See CsvObsFile.py for specification of CSV format.
#
# Each file is specified on a data_file command as
#
# data_file "filename" param=value param=value
#
# The filename can be preceded by a file type code and ':'
# eg  csv:mydata.dat.  Valid file types are csv, msr,snx
#
# The param=value are passed directly to the observation file reader
# function as named parameters.  For CSV files this allows specifying
# additional observation attributes from CSV columns using 
#    attributes=col1+col2

data_file totalstation.csv attributes=equipment+targetid
data_file reduced.msr
data_file BASELINES.SNX

# Optional output files
# 
# Observation residuals
#
# Can include options
#   attributes=xxx+yyy   To include attributes in the output 
#   wkt                  To include WKT geospatial definition
# 
# Attributes can include source, which defines the file and line the observation 
# is read from (if supported by the data file reader)

residual_csv_file wark2015lt-residuals.csv

# Station coordinates.  Filename can be followed by options of
#    geodetic     output coords as lat/lon/ell hgt
#    xyz          output coords geocentric XYZ
#    covariances  include a priori coordinate ENU covariance information
#    ellipses     include a priori coordinate error ellipses
#    offsets      include station ENU offsets
#    to           the rest of the command is the filename,
#                 including spaces
#
#  eg output_coordinate_file newcoords.csv geodetic covariances

output_coordinate_file coords.csv

# Statistics JSON file

stats_json_file stats.json

# ========================================================
# Station constraint options
#
# Stations can be fixed or free, as well as accepted or rejected
# Observations using rejected stations are removed from the observation data set
# Coordinates are not calculated for stations that are fixed
# 
# By default all status are accepted and all used stations are free.
# If the first command is accept or free, then the corresponding
# default is reversed (ie all stations are rejected, all used stations 
# are fixed respectively).  
#
# Station can be identified by a code, by '*' meaning all stations, or
# by 're:exp' to meaning stations matching regular expression exp.  A leading
# ':' on a code is ignored (to allow entering a code that actually begins
# 're:'!)

# fix code code ...
# free code code ...
#
# accept code code ...
# reject code code ...

# Ignore missing stations in the observation files..

# ignore_missing_stations yes

#=============================================================
# Observation options

# Observations can be rejected (ie removed) or reweighted based
# on criteria of instrument station, target station, or observation type
# or an attribute.  
#
# Observations can also have their station codes recoded based on 
# regular expressions and criteria
#
# Criteria can include any of
#
#    inststn=code
#    inststn=re:codere
#    trgtstn=code
#    trgtstn=re:codere
#    type=typecode
#    attr:attribname=value
#    attr:attribname=re:value
#
# Multiple criteria can be used to define the affected observations,
# eg
#
#  reweight_observations 2.0 inststn=re:TEST.* type=HA
#  reject_observations trgtstn=AL23
#
# Observations are also filtered based on the accept/reject station criteria
#
# The modifications are applied immediately after the observations have been
# read.
# Station recoding is done before any other factors are applied.
# Recoding uses the format
#
# recode_observations from to [criteria]
#
# From can either be an explicit station code or re: followed by 
# a regular expression.  If a regular expression then then capture
# groups can be referenced in the to station, eg
#
# recode_observations re:AB(\d+) CD\1 type=HA

# Refraction correction (applied only to zenith distance obs)

refraction_coefficient 0.075

#====================================================================
# Adjustment configuration

convergence_tolerance 0.0001
max_iterations 10
min_iterations 0

# Adjust in terms of ENU components rather than XYZ components - 
#
# adjust_enu yes

#======================================================================
# SINEX output file info
#
# Reference station information for output SINEX file.  Identifies the id
# code, monument and descripton of the stations that will be 
# included in the final SINEX files.  

sinex_output_file WARK2015LT.SNX

sinex_site_id WARK WARK  A 50243M001 WARKWORTH GNSS CORS
sinex_site_id WARK12M 7277  A 50243S001 WARKWORTH AXIS IVP
sinex_site_id WARK30M 0000  A 50243S001 WARKWORTH AXIS IVP

# Sinex file header info.  Can include agency, description,
# contact, input, output, sortware, hardware, comment

sinex_header_info agency LNZ
sinex_header_info description Warkworth 2015 local tie survey
sinex_header_info output WARK GNSS reference coordinate and antennae IVPs
sinex_header_info contact geodetic@linz.govt.nz

#=====================================================================
# Extra output options

# Verbose echoes the listing file to the screen
verbose yes

# Debug options write extra information to the listing file
debug_observation_equations False
debug_station_offsets False

